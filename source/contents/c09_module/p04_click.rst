==========
命令行
==========

Python 内置了 ``argparse`` 和 ``optparse`` 等库来构建命令行工具，但它们在复杂场景下显得繁琐。


命令行工具通常由三部分组成:

- 命令（Command）：用户在命令行中输入的指令，如 ``git commit`` 中的 commit。 
- 选项（Option）：以 ``--`` 或 ``-`` 开头的参数，如 ``--verbose``。
- 参数（Argument）：命令后的位置参数，如 ``git add file.txt`` 中的 ``file.txt``。


click
==========

``Click（Command Line Interface Creation Kit）`` 是一个简单、优雅且高度可扩展的 Python 库，旨在帮助开发者快速构建用户友好的命令行工具。它不仅支持自动生成帮助文档和参数验证，还提供了丰富的功能，如子命令、进度条和彩色输出，极大地降低了开发门槛。它的核心特性包括：

- 声明式语法：通过装饰器（如 ``@click.command()``）定义命令，代码简洁直观。
- 自动帮助文档：无需手动编写帮助信息，Click 自动生成。
- 参数验证：内置类型检查和错误提示，减少手动处理的工作量。
- 可组合性：支持嵌套命令和模块化设计，适合复杂工具开发。

