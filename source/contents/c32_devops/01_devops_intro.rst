DevOps 基础概念详解
=====================

1️⃣ DevOps 是什么？
------------------------

核心理念：🤝 开发（Dev） + 运维（Ops） 打破壁垒，通过 自动化工具链 实现高效协作！

终极目标：🚀 快速交付高质量软件，响应市场变化！

2️⃣ CI/CD 是什么？
------------------------

**CI（持续集成）：**

- ✅ 代码频繁合并 →  
- ✅ 自动构建 + 测试 →  
- ❌ 早发现错误！

工具代表：Jenkins、GitLab CI、Tekton

**CD（持续交付/部署）：**

- 🚢 自动化发布到测试/生产环境 →  
- 🌍 一键全球交付！

工具代表：ArgoCD、FluxCD、Zadig

3️⃣ DevOps ≠ 工具堆砌！
-----------------------------

核心三角：文化（协作） + 流程（标准化） + 工具（自动化）

CI/CD 工具链与实现方式
-----------------------------

**CI/CD 四步走**

1. 代码提交 →  
2. 自动化构建（Docker镜像） →  
3. 测试验证 →  
4. 多环境部署（K8s/虚拟机）

**环境支撑三大件**

- Docker🐳：标准化应用打包，解决“我本地能跑”的玄学问题！
- Kubernetes☸️：容器编排之王，一键伸缩、自愈、多环境部署！
- 虚拟机🖥️：传统架构过渡期的兼容选择，稳如老狗~

CI/CD 工具对照表 | 一招选对神器！
----------------------------------------

.. list-table:: CI/CD 工具对照表 | 一招选对神器！
   :header-rows: 1
   :widths: 20 10 40 30

   * - 工具
     - 类型
     - 核心特点
     - 适合场景
   * - Jenkins🛠️
     - CI
     - 插件生态最强，灵活定制流水线
     - 复杂项目、多语言混合架构
   * - Tekton🔧
     - CI
     - 云原生原生，声明式流水线
     - K8s 环境、标准化 CI 流程
   * - GitLab CI🐱
     - CI
     - 与 GitLab 深度集成，YAML 配置极简
     - 中小团队、一体化 DevOps 平台
   * - ArgoCD🚀
     - CD
     - GitOps 标杆，声明式部署 + 审计追踪
     - 多云/K8s 环境、强合规需求
   * - FluxCD🌀
     - CD
     - 轻量级 GitOps，自动化同步 Git 与集群
     - 微服务高频发布、极简自动化
   * - Zadig🛸
     - CD
     - 国产开源，可视化流水线 + 环境管理
     - 混合云、传统企业渐进式转型
