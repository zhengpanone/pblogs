========================================
GitLab用户创建与权限体系介绍
========================================

权限体系升级：GitLab 16+ 核心变化 🌟
===================================================

GitLab 最新权限体系围绕 「角色分层+数据驱动」 设计，新增 Planner/Reporter 角色，并细化数据分析权限（如 DORA 指标、AI 影响分析），助力团队安全协作与效能提升。

六大角色权限全景图 📊
-------------------------------

.. list-table::
   :header-rows: 1
   :widths: 25 10 10 10 10 10 10

   * - 权限项
     - Guest
     - Planner
     - Reporter
     - Developer
     - Maintainer
     - Owner
   * - 查看项目代码/文档
     - ✅
     - ✅
     - ✅
     - ✅
     - ✅
     - ✅
   * - 提交代码/创建分支
     - ❌
     - ❌
     - ❌
     - ✅
     - ✅
     - ✅
   * - 创建 Merge Request
     - ❌
     - ❌
     - ❌
     - ✅
     - ✅
     - ✅
   * - 合并 MR/管理分支
     - ❌
     - ❌
     - ❌
     - ❌
     - ✅
     - ✅
   * - 管理 CI/CD 流水线
     - ❌
     - ❌
     - ❌
     - ❌
     - ✅
     - ✅
   * - 查看价值流分析
     - ✅
     - ✅
     - ✅
     - ✅
     - ✅
     - ✅
   * - 查看 CI/CD 分析
     - ❌
     - ❌
     - ✅
     - ✅
     - ✅
     - ✅
   * - 查看 DORA 指标
     - ❌
     - ❌
     - ✅
     - ✅
     - ✅
     - ✅
   * - 修改项目设置
     - ❌
     - ❌
     - ❌
     - ❌
     - ✅
     - ✅
   * - 删除项目/转移归属
     - ❌
     - ❌
     - ❌
     - ❌
     - ❌
     - ✅

核心角色详解与场景示例 🎯
----------------------------------------

① Guest（访客） 👀  

- 权限范围：  

  - 查看代码、Issue、基础分析（如价值流进度）  
  - 禁止操作：提交代码、触发流水线、访问敏感数据  

- 适用场景：客户临时审计项目进度，或外部合作伙伴查看公开文档

② Planner（规划者） 📅  

- 权限范围： 

  - 包含 Guest 权限  
  - 需求规划工具（如 Issue Board、里程碑）  
  - 新增能力：创建/分配任务，无代码或配置权限  

- 适用场景：产品经理规划迭代需求，跟踪功能交付进度

③ Reporter（报告员） 📊  

- 权限范围： 

  - 查看全量分析数据（CI/CD 效率、DORA 指标、代码审查质量）  
  - 禁止操作：修改配置、合并代码 

- 适用场景：测试团队分析流水线失败原因，或管理层生成效能报告

④ Developer（开发者） 💻  

- 权限范围：

  - 代码提交、MR 创建  
  - 查看数据分析（如部署频率、代码覆盖率）  
  - 协作升级：通过 DORA 指标优化开发流程  

- 适用场景：开发者提交新功能代码，并基于 CI/CD 分析优化测试策略

⑤ Maintainer（维护者） 🔧  

- 权限范围：

  - 合并 MR、管理分支、配置流水线  
  - 调整分析规则（如 AI 影响分析阈值） 

- 安全提示：避免向非核心成员开放 AI 分析配置权限，防止数据泄露

⑥ Owner（所有者） 👑  

- 唯一权限： 

  - 删除项目、转移归属、管理群组成员权限  
  - 操作规范：仅限项目经理或系统管理员，避免权限滥用

用户创建与权限分配实操指南 🛠️
---------------------------------------------

步骤：  
1. 进入管理员面板：  
   
   ``https://<gitlab-domain>/admin/users``

2. 点击 New User → 填写邮箱、用户名、密码  

   注意：Reset link 会自动生成并发送给用户，用户首次登录时被强制设置密码。  
   使用管理员用户可在创建用户时直接指定密码。

3. 登录新账号  
4. 设置新的密码  
5. 登录后查看当前用户权限

权限管理最佳实践 ✅
-----------------------------------

1. 分层授权：  
   - 普通成员 → Developer，核心成员 → Maintainer，避免 Owner 权限泛滥

2. 保护关键分支：  
   - main 分支设置合并保护，仅允许 Maintainer 合并 MR

3. 数据分析隔离：  
   - DORA 指标和 AI 分析仅对 Reporter 及以上角色开放

4. 自动化管控：  
   - 通过 LDAP/SCIM 同步企业组织架构，实现权限批量管理

常见问题解答 ❓
-----------------------------

Q1：如何临时提升用户权限？

- Owner 进入 Members → 调整角色 → 任务完成后恢复原权限  
- 注意记录权限变更日志，避免权限混乱

Q2：Guest 用户能否下载私有项目代码？  

- 否！私有项目需显式授权（即使 Guest 角色），公开项目可克隆

Q3：误删 Owner 权限如何恢复？  

- 由其他 Owner 重新分配权限，或联系系统管理员通过 API 修复

总结 🚀
-----------------

GitLab 权限体系是 「安全+效能」 的双引擎： 

- 角色分层：Planner/Reporter 分离规划与报告职责，Developer/Maintainer 聚焦开发与运维  
- 数据驱动：通过 DORA 指标和 AI 分析优化流程，但需严格管控敏感数据权限  
- 最小原则：按职能分配权限，定期清理冗余账号

📢 立即行动：  

- 检查项目权限配置，确保分支保护与角色分配合规  
- 为测试团队分配 Reporter 角色，释放数据分析价值！

延伸阅读：  

- `GitLab 官方权限文档 <https://docs.gitlab.com/ee/user/permissions.html>`_
